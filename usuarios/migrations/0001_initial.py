# Generated by Django 4.1.9 on 2023-05-25 00:22

import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import usuarios.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Colaborador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='DiaDaSemana',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia', models.CharField(choices=[('Segunda', 'Segunda-feira'), ('Terca', 'Terça-feira'), ('Quarta', 'Quarta-feira'), ('Quinta', 'Quinta-feira'), ('Sexta', 'Sexta-feira'), ('Sabado', 'Sábado'), ('Domingo', 'Domingo')], max_length=10)),
                ('entrada1', models.TimeField()),
                ('saida1', models.TimeField()),
                ('entrada2', models.TimeField(blank=True, null=True)),
                ('saida2', models.TimeField(blank=True, null=True)),
                ('folga', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Filial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Marcacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia', models.DateField()),
                ('marcacoes', models.TimeField()),
                ('colaborador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usuarios.colaborador')),
            ],
        ),
        migrations.CreateModel(
            name='FolhaDePonto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mes', models.PositiveSmallIntegerField()),
                ('ano', models.PositiveSmallIntegerField()),
                ('colaborador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usuarios.colaborador')),
                ('marcacoes', models.ManyToManyField(to='usuarios.marcacao')),
            ],
        ),
        migrations.CreateModel(
            name='EscalaSemanal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('dias', models.ManyToManyField(to='usuarios.diadasemana')),
            ],
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('filial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usuarios.filial')),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
        migrations.AddField(
            model_name='colaborador',
            name='escala_semanal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usuarios.escalasemanal'),
        ),
        migrations.CreateModel(
            name='CustomUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nome', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('celular', models.CharField(max_length=15, verbose_name='Celular')),
                ('cpf', models.CharField(max_length=11, unique=True)),
                ('matricula', models.IntegerField(unique=True)),
                ('rg', models.CharField(max_length=18)),
                ('pis', models.DecimalField(blank=True, decimal_places=0, max_digits=25, null=True)),
                ('cargo', models.CharField(max_length=100)),
                ('sexo', models.CharField(choices=[('m', 'Masculino'), ('f', 'Feminino'), ('outros', 'Outros')], max_length=50)),
                ('data_admissao', models.DateField(blank=True, null=True)),
                ('data_demissao', models.DateField(blank=True, null=True)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('is_staff', models.BooleanField(default=False, verbose_name='Membro da equipe')),
                ('departamento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='usuarios.departamento')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', usuarios.models.UsuarioManager()),
            ],
        ),
    ]
